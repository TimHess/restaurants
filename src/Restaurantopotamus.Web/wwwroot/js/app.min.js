function AuthController($scope,$http,$rootScope){function focusOnUsername(){window.setTimeout(function(){document.getElementById("username").focus()},10)}var user=sessionStorage.getItem("user");user==null?$scope.authenticated=!1:($scope.authenticated=!0,$scope.user=JSON.parse(user));$scope.showForm=!1;$scope.$watch("authenticated",function(){$rootScope.authenticated=$scope.authenticated});$scope.login=function(){$scope.showForm="login";$scope.buttonText="Sign In";focusOnUsername()};$scope.trylogin=function(user){console.log("getting a token");$http.post("/token","username="+encodeURIComponent(user.name)+"&password="+encodeURIComponent(user.password),{headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(response){sessionStorage.setItem("user",JSON.stringify({name:user.name,token:response.access_token}));$scope.authenticated=!0}).error(function(response){alert(response)})};$scope.formSubmit=function(user){if(user==null||user.name==null||user.password==null){alert("Please enter a username and password");return}$scope.showForm==="login"?$scope.trylogin(user):$scope.showForm==="register"&&$scope.tryregister(user)};$scope.register=function(){$scope.showForm="register";$scope.buttonText="Register";focusOnUsername()};$scope.tryregister=function(user){console.log("registering");$http.post("/api/auth/register",{username:user.name,password:user.password}).then(function(response){sessionStorage.setItem("user",JSON.stringify({name:user.name,token:response.access_token}));$scope.authenticated=!0},function(response){alert(response.data.error)})};$scope.reset=function(){$scope.user=null;$scope.showForm=!1};$scope.logout=function(){console.log("logged out");$scope.authenticated=!1;sessionStorage.removeItem("user")}}function RatingController($scope,$http,toastr){this.rate=function(rating){$http.post("/api/rating",{value:rating,restaurantId:this.restaurantId}).then(function(){toastr.success("Rating received!");$scope.$ctrl.total++},function(){toastr.error("Sorry, there was an error processing your rating!")})}}function RestaurantController($scope,$http,toastr){$scope.loading=!0;$scope.addOrEdit=!1;$http.get("/api/restaurant").then(function(response){$scope.Restaurants=response.data;$scope.loading=!1},function(){$scope.loading=!1});$scope.add=function(){$scope.addOrEdit=!0;$scope.addEditButtonText="Add Restaurant";$scope.restaurant={name:null,cuisineType:null,id:null}};$scope.tryadd=function(restaurant){$scope.loading=!0;$http.post("/api/restaurant/",{name:restaurant.name,cuisineType:restaurant.cuisineType},{headers:{Authorization:"Bearer "+JSON.parse(sessionStorage.getItem("user")).token}}).then(function(response){$scope.loading=!1;toastr.success("R has been updated".replace("R",restaurant.name),"Restaurant added!");$scope.Restaurants.push(response.data);$scope.addOrEdit=!1},function(response){$scope.loading=!1;response.status==401?alert("Sorry, you're not authorized to do that"):alert("Sorry, something went wrong")})};$scope.edit=function(toEdit){$scope.addOrEdit=!0;$scope.addEditButtonText="Edit Restaurant";$scope.restaurant={name:toEdit.name,cuisineType:toEdit.cuisineType,id:toEdit.id};$scope.saved=toEdit};$scope.tryedit=function(restaurant){$scope.loading=!0;$http.put("/api/restaurant/",{id:restaurant.id,name:restaurant.name,cuisineType:restaurant.cuisineType},{headers:{Authorization:"Bearer "+JSON.parse(sessionStorage.getItem("user")).token}}).then(function(){toastr.success("R has been updated".replace("R",restaurant.name),"Restaurant updated!");$scope.saved.name=$scope.restaurant.name;$scope.saved.cuisineType=$scope.restaurant.cuisineType;$scope.addOrEdit=!1;$scope.loading=!1},function(response){response.status==401?alert("Sorry, you're not authorized to do that"):alert("Sorry, something went wrong");$scope.loading=!1})};$scope.submitForm=function(restaurant){restaurant.id?$scope.tryedit(restaurant):$scope.tryadd(restaurant)};$scope.remove=function(id){confirm("Are you sure? You will not be able to undo this action!")&&($scope.loading=!0,$http.delete("/api/restaurant/"+id,{headers:{Authorization:"Bearer "+JSON.parse(sessionStorage.getItem("user")).token}}).then(function(){var element=document.getElementById("r"+id);element.parentNode.removeChild(element);$scope.loading=!1},function(response){response.status==401?alert("Sorry, you're not authorized to do that"):alert("Sorry, something went wrong");$scope.loading=!1}))};$scope.cancel=function(){$scope.addOrEdit=!1}}angular.module("app.Hippo",["ngAnimate","toastr"]);angular.module("app.Hippo").controller("AuthController",AuthController);AuthController.$inject=["$scope","$http","$rootScope"];angular.module("app.Hippo").controller("RatingController",RatingController);RatingController.$inject=["$scope","$http","toastr"];angular.module("app.Hippo").controller("RestaurantController",RestaurantController);RestaurantController.$inject=["$scope","$http","toastr"];angular.module("app.Hippo").component("auth",{bindings:{restaurant:"=",remove:"&"},controller:AuthController,template:'<div class="login"><div class="authenticated" ng-show="authenticated">Hiya {{ user.name }}! <button class ="btn btn-primary" ng-click="logout()">Sign Out<\/button><\/div><div class="anonymous" ng-show="!authenticated && !showForm"><a href ng-click="register()">Register<\/a><button class ="btn btn-primary" ng-click="login()">Sign In<\/button><\/div><div ng-show="!authenticated && showForm"><a href ng-click="reset()">Cancel<\/a><form novalidate>Username: <input id="username" type="text" ng-model="user.name" />Password: <input id="password" type="password" ng-model="user.password" /><input class ="btn btn-primary" type="submit" ng-click="formSubmit(user)" value="{{ buttonText }}" /><\/form><\/div><\/div>'});angular.module("app.Hippo").component("rating",{bindings:{average:"@",total:"@",restaurantId:"@",rate:"&"},controller:RatingController,template:'<div class="rating"><star-rating max="5" rating-value="$ctrl.average" on-rating-selected="$ctrl.rate(rating)"><\/star-rating><span>Out of {{ $ctrl.total }} total rating(s)<\/span><\/div>'});angular.module("app.Hippo").component("restaurant",{bindings:{restaurant:"=",remove:"&",edit:"&"},controller:function($rootScope,$scope){$rootScope.$watch("authenticated",function(){$scope.authenticated=$rootScope.authenticated})},template:'<div id="rc{{$ctrl.restaurant.id}}" class="restaurant form-control"><i class="fa fa-lg fa-trash-o" ng-click="$ctrl.remove({id:$ctrl.restaurant.id})" ng-if="authenticated"><\/i><i class="fa fa-lg fa-pencil" ng-click="$ctrl.edit({toEdit:$ctrl.restaurant})" ng-if="authenticated"><\/i><h3>{{ $ctrl.restaurant.name }}<\/h3><h4>Featured Cuisine: {{ $ctrl.restaurant.cuisineType }}<\/h4><rating average="{{ $ctrl.restaurant.averageRating }}" total="{{ $ctrl.restaurant.totalRatings }}" restaurant-id="{{ $ctrl.restaurant.id }}"><\/rating><\/div>'}),function(){"use strict";function StarController(){this.rateFunction=function(rating){console.log("Rating selected: "+rating)}}function starRating(){return{restrict:"E",template:'<ul class="star-rating">  <li ng-repeat="star in stars" class="star" ng-class="{filled: star.filled}" ng-click="toggle($index)">    <i class="fa fa-star"><\/i>  <\/li> ({{ ratingValue | number:1 }}/{{ max }})<\/ul>',scope:{ratingValue:"=?",max:"=?",onRatingSelected:"&"},link:function(scope){var updateStars=function(){scope.stars=[];for(var i=0;i<scope.max;i++)scope.stars.push({filled:i<scope.ratingValue})};scope.toggle=function(index){scope.ratingValue=index+1;scope.onRatingSelected({rating:index+1})};scope.$watch("ratingValue",function(oldVal,newVal){newVal&&updateStars()})}}}angular.module("app.Hippo").controller("StarController",StarController).directive("starRating",starRating)}();